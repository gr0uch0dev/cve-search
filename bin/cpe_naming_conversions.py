import xml.etree.ElementTree as ET
from bin.search import search_product

_xml_cpe_dictionary = None


def get_cpe_dictionary_xlm():
    global _xml_cpe_dictionary
    assert _xml_cpe_dictionary is not None
    return _xml_cpe_dictionary


def set_cpe_dictionary_xml_path(xml_path):
    global _xml_cpe_dictionary
    _xml_cpe_dictionary = xml_path


def extract_full_names_to_cpe(xml_path):
    tree = ET.parse(xml_path)
    root = tree.getroot()
    cpe_items_tag = [x for x in root.iter() if "cpe-item" in x.tag]
    title_cpe = [([y for y in x.getchildren() if "title" in y.tag][0].text, x.get("name"))
                 for x in cpe_items_tag if x.getchildren()]
    return title_cpe


_tuples_title_cpe = None


def load_info_from_xml(xml_path):
    global _tuples_title_cpe
    _tuples_title_cpe = extract_full_names_to_cpe(xml_path)


def from_full_software_info_get_cep_text(software_info):
    global _tuples_title_cpe
    assert isinstance(_tuples_title_cpe, list)
    text_to_search = software_info
    cpe_names_for_text = [x[1] for x in _tuples_title_cpe if text_to_search in x[0]]
    assert len(cpe_names_for_text) > 1
    return cpe_names_for_text[0]


def search_cve_from_full_software_name_and_version(software_info):
    cpe_name = from_full_software_info_get_cep_text(software_info)
    out = search_product(cpe_name)
    print(out)
